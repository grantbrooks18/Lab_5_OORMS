@startuml
'https://plantuml.com/sequence-diagram
!include style.puml
header Brooks and MacDonald
title Create Bill
actor server
participant "view : \nServerView" as view
participant "controller : \nTableController" as controller
participant "controller : \nReceiptController" as Rcontroller
participant "receipt:\nReceipt" as receipt


server -> view ++ : Presses button to create the bill
view ->controller++: make_bills()
controller->view:set_controller(ReceiptController)
view->view: self.controller = controller
controller -> Rcontroller++: make_bills()
Rcontroller->view: create_receipt_ui(table)
loop for ix, order in enumerate(orders)
alt if table.has_order_for(ix)
view->view:seats_with_orders.append(ix)
end alt
end loop
view->view:billing = seats_with_orders.copy()

view->Rcontroller:update_receipt(seats_with_orders, billing)
Rcontroller->receipt++:update_receipt(new_seats, new_billing)
receipt->receipt:seats = new_seats.copy()
receipt->receipt:billing = new_billing.copy()
Rcontroller->view:draw_receipt(receipt)

loop for ix in receipt.seats

view->view:make_button(seat_number)

end loop

'controller -> items++: mark_as_served()
'items->items--: item.state="SERVED"
'view->restaurant++: notify_view()
@enduml
